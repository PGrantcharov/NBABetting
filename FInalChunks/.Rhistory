knitr::opts_chunk$set(echo = TRUE)
library(plyr)
library(tidyverse)
library(dygraphs)
library(xts)
library(GGally)
library(gridExtra)
library(knitr)
combined = read_csv("../Data/combined.csv")[-c(1)]
intermediate = read_csv("../Data/intermediate.csv")
tidy = read_csv("../Data/tidy.csv")
options(dplyr.width = Inf)
kable(combined[1:5,], caption = "Untidy Data")
kable(tidy[1:5, c(2, 4, 5, 6, 7, 8, 9, 14, 16, 18, 22, 24, 25)], caption = "Tidy Data")
unique(combined$Team)
kable((combined %>% filter(`2H` == 'pk'))[1:5,], caption = "Pick 'em Examples *Notice column '2H'")
kable(combined[c(1975,23521),], caption = "Faulty Over/Under Cases")
quarter_scores <- intermediate %>%
select(V1, V2, V3, V4, H1, H2, H3, H4)
quarter_scores <-gather(quarter_scores, key = "Quarter", value = "Score")
before <- ggplot(quarter_scores, aes(x = Quarter, y = Score)) +
geom_boxplot(fill = "brown", color = "black") +
ggtitle("Boxplots of Quarter Point Totals Before Adjustments") +
labs(x = "Quarter",
y = "Number of Points",
caption = "V = visitor, H = home") +
theme_bw()
quarter_scores <- tidy %>%
select(V1, V2, V3, V4, H1, H2, H3, H4)
quarter_scores <- gather(quarter_scores, key = "Quarter", value = "Score")
after <- ggplot(quarter_scores, aes(x = Quarter, y = Score)) +
geom_boxplot(fill = "brown", color = "black") +
ggtitle("Boxplots of Quarter Point Totals After Adjustments") +
labs(x = "Quarter",
y = "Number of Points",
caption = "V = visitor, H = home") +
theme_bw()
grid.arrange(before, after, ncol = 2, widths = c(9, 9))
OUs <- intermediate %>%
select(OUOpen, OUClose)
OUs <- gather(OUs, key = "OpenClose", value = "Value")
before <- ggplot(OUs, aes(x = OpenClose, y = Value)) +
geom_boxplot(fill = "brown", color = "black") +
ggtitle("Boxplots of Over/Under Scores at the Open and Close Before Adjustments") +
labs(x = "Open/Close",
y = "Over/Under for the Total Number of Points") +
theme_bw()
OUs <- tidy %>%
select(OUOpen, OUClose)
OUs <- gather(OUs, key = "OpenClose", value = "Value")
after <- ggplot(OUs, aes(x = OpenClose, y = Value)) +
geom_boxplot(fill = "brown", color = "black") +
ggtitle("Boxplots of Over/Under Scores at the Open and Close After Adjustments") +
labs(x = "Open/Close",
y = "Over/Under for the Total Number of Points") +
theme_bw()
grid.arrange(before, after, ncol = 2, widths = c(9, 9))
Tots <- intermediate %>%
select(VF, HF)
Tots <- gather(Tots, key = "Team", value = "Value")
before <- ggplot(Tots, aes(x = Team, y = Value)) +
geom_boxplot(fill = "brown", color = "black") +
ggtitle("Boxplots of Game Point Totals Before Adjustments") +
labs(x = "Visitor/Home Final Score",
y = "Total Number of Points") +
theme_bw()
Tots <- tidy %>%
select(VF, HF)
Tots <- gather(Tots, key = "Team", value = "Value")
after <- ggplot(Tots, aes(x = Team, y = Value)) +
geom_boxplot(fill = "brown", color = "black") +
ggtitle("Boxplots of Game Point Totals After Adjustments") +
labs(x = "Visitor/Home Final Score",
y = "Total Number of Points") +
theme_bw()
grid.arrange(before, after, ncol = 2, widths = c(9, 9))
tidy <- tidy %>%
select(Date, SZN, V, H, V1, V2, V3, V4, H1, H2, H3, H4,
VF, HF, OUOpen, OUClose, OU2H, VMoney, HMoney) %>%
mutate(Total = VF+HF) %>%
mutate(Total_2H = V3+V4+H3+H4)
df <- tidy %>%
select(OUOpen, OUClose) %>%
mutate(Diff = OUClose - OUOpen)
histo <- ggplot(df, aes(x = Diff)) +
geom_histogram(binwidth = 0.5, fill='brown', color='black') +
xlab("Score Difference") +
ylab("Frequency Counts") +
ggtitle("Histogram of Changes in Over/Under Values (OUClose-OUOpen)") +
theme_bw()
box <- ggplot(df, aes(y= Diff)) +
geom_boxplot(fill = "brown") +
scale_x_discrete() +
xlab("(OUClose - OUOpen)") +
ylab("Score Difference") +
ggtitle("Boxplot of Changes in Over/Under Values (OUClose-OUOpen)") +
theme_bw()
qq <- ggplot(df, aes(sample = Diff)) +
geom_qq() +
stat_qq_line(distribution = qnorm, color= "brown", size = 2) +
xlab("Theoratical") +
ylab("Score Difference") +
ggtitle("QQ-Plot of Changes in Over/Under Values (OUClose-OUOpen)") +
theme_bw()
df <- tidy %>% select(OUClose, OU2H) %>% mutate(Ratio = OUClose / OU2H)
scat <- ggplot(df, aes(x = OUClose, y = OU2H)) +
geom_point(alpha = 0.05) +
geom_smooth(method = lm, se = FALSE, color = "brown", show.legend = TRUE, size = 2) +
scale_x_continuous("Over/Under Scores for Full Game",
breaks = c(170, 180, 190, 200, 210, 220, 230, 240),
labels = c("170", "180", "190", "200", "210", "220", "230", "240")) +
scale_y_continuous("Over/Under Scores for 2nd Half",
breaks = c(85,90,95,100,105,110,115,120),
labels = c("85","90","95","100","105","110","115","120")) +
ggtitle("Over/Under Scores at the Close for Full Game vs. 2nd Half") +
theme_bw()
grid.arrange(histo, box, qq, scat, ncol = 2)
df <- tidy %>%
select(OUOpen, OUClose, Total, OU2H, Total_2H) %>%
mutate(Diff = OUClose-OUOpen) %>%
mutate(Diff_dec_idx =
cut(Diff,
breaks = c(-Inf, -5.49, -4.49, -3.49, -2.49, -1.49, -0.49, 0.49, 1.49, 2.49, 3.49, 4.49, 5.49, Inf),
labels = c("<= -6","-5","-4", "-3", "-2", "-1", "skip", "1", "2", "3", "4", "5", ">= 6"))) %>%
filter(!(Diff_dec_idx == "skip")) %>%
mutate(earning = if_else( (Total_2H-OU2H)*(Diff)>0, 95, if_else(Total_2H==OU2H, 0, -100) ) )
df2 <- df %>%  group_by(Diff_dec_idx) %>% summarise(profit = sum(earning)) %>% filter(as.numeric(Diff_dec_idx)>0)
ggplot(df2, aes(x=Diff_dec_idx, y = profit)) +
geom_bar(stat='identity', fill = "brown", color = "black") +
xlab("Open-to-Close Over/Under Difference") +
ylab("Profit ($)") +
ggtitle("Profit by Open-to-Close Score Differences via Proposed Betting System") +
theme_bw()
df <- tidy  %>% select(OUOpen, OUClose, OU2H, Total_2H) %>%
mutate(Diff = OUClose-OUOpen)
df$Profit = 0
for (i in 2:length(df$Profit)){
if (df$Diff[i] == 0) {
next
}
else {
if (df$OU2H[i] > df$Total_2H[i]) {
df$Profit[i] <- df$Profit[i - 1] + 95
}
else if (df$OU2H[i] < df$Total_2H[i]) {
df$Profit[i] <- df$Profit[i - 1] - 100
}
else {
df$Profit[i] <- df$Profit[i - 1]
}
}
}
ggplot(df, aes(y = Profit, x = Date, col = "Profit")) +
geom_line(lwd = 0.1) +
geom_ribbon(aes(x = Date, ymax = Profit), ymin = 0, alpha=0.3,
fill = "darkgreen", color = "darkgreen") +
geom_hline(aes(yintercept = max(Profit), colour = "High"),
alpha = 0.8, lwd = 1, linetype="dotdash") +
geom_hline(aes(yintercept = min(Profit), colour = "Low"), alpha = 0.8, lwd = 1,
linetype="dotdash") +
geom_hline(aes(yintercept = Profit[14186], colour = "Finish"), alpha = 0.8,
lwd = 1, linetype="dotdash") +
ggtitle("Profit Over Time by Betting 'Under' for 2nd Half Over/Under") +
scale_color_manual(values = c('Profit' = 'darkgreen', "Low" = "red",
"High" = "blue", "Finish" = "black")) +
labs(x = "Date", y = "Running Profit", color = "Legend:") +
theme_bw()
df <- tidy  %>% select(Date, OUOpen, OUClose, OU2H, Total_2H) %>%
mutate(Diff = OUClose-OUOpen)
df$Profit = 0
for (i in 2:length(df$Profit)){
if (df$Diff[i] == 0) {
next
}
else {
if (df$OU2H[i] > df$Total_2H[i]) {
df$Profit[i] <- df$Profit[i - 1] + 95
}
else if (df$OU2H[i] < df$Total_2H[i]) {
df$Profit[i] <- df$Profit[i - 1] - 100
}
else {
df$Profit[i] <- df$Profit[i - 1]
}
}
}
ggplot(df, aes(y = Profit, x = Date, col = "Profit")) +
geom_line(lwd = 0.1) +
geom_ribbon(aes(x = Date, ymax = Profit), ymin = 0, alpha=0.3,
fill = "darkgreen", color = "darkgreen") +
geom_hline(aes(yintercept = max(Profit), colour = "High"),
alpha = 0.8, lwd = 1, linetype="dotdash") +
geom_hline(aes(yintercept = min(Profit), colour = "Low"), alpha = 0.8, lwd = 1,
linetype="dotdash") +
geom_hline(aes(yintercept = Profit[14186], colour = "Finish"), alpha = 0.8,
lwd = 1, linetype="dotdash") +
ggtitle("Profit Over Time by Betting 'Under' for 2nd Half Over/Under") +
scale_color_manual(values = c('Profit' = 'darkgreen', "Low" = "red",
"High" = "blue", "Finish" = "black")) +
labs(x = "Date", y = "Running Profit", color = "Legend:") +
theme_bw()
View(df)
df <- tidy  %>% select(Date, OUOpen, OUClose, OU2H, Total_2H) %>%
mutate(Diff = OUClose-OUOpen)
df$Profit = 0
for (i in 2:length(df$Profit)){
if (df$Diff[i] == 0) {
df$Profit[i] <- df$Profit[i - 1]
}
else {
if (df$OU2H[i] > df$Total_2H[i]) {
df$Profit[i] <- df$Profit[i - 1] + 95
}
else if (df$OU2H[i] < df$Total_2H[i]) {
df$Profit[i] <- df$Profit[i - 1] - 100
}
else {
df$Profit[i] <- df$Profit[i - 1]
}
}
}
ggplot(df, aes(y = Profit, x = Date, col = "Profit")) +
geom_line(lwd = 0.1) +
geom_ribbon(aes(x = Date, ymax = Profit), ymin = 0, alpha=0.3,
fill = "darkgreen", color = "darkgreen") +
geom_hline(aes(yintercept = max(Profit), colour = "High"),
alpha = 0.8, lwd = 1, linetype="dotdash") +
geom_hline(aes(yintercept = min(Profit), colour = "Low"), alpha = 0.8, lwd = 1,
linetype="dotdash") +
geom_hline(aes(yintercept = Profit[14186], colour = "Finish"), alpha = 0.8,
lwd = 1, linetype="dotdash") +
ggtitle("Profit Over Time by Betting 'Under' for 2nd Half Over/Under") +
scale_color_manual(values = c('Profit' = 'darkgreen', "Low" = "red",
"High" = "blue", "Finish" = "black")) +
labs(x = "Date", y = "Running Profit", color = "Legend:") +
theme_bw()
df <- tidy  %>% select(Date, OUOpen, OUClose, OU2H, Total_2H) %>%
mutate(Diff = OUClose-OUOpen)
df$Profit = 0
for (i in 2:length(df$Profit)){
if (df$Diff[i] == 0) {
df$Profit[i] <- df$Profit[i - 1]
}
else {
if (df$OU2H[i] > df$Total_2H[i]) {
df$Profit[i] <- df$Profit[i - 1] + 95
}
else if (df$OU2H[i] < df$Total_2H[i]) {
df$Profit[i] <- df$Profit[i - 1] - 100
}
else {
df$Profit[i] <- df$Profit[i - 1]
}
}
}
ggplot(df, aes(y = Profit, x = Date, col = "Profit")) +
geom_line(lwd = 0.1) +
geom_ribbon(aes(x = Date, ymax = Profit), ymin = 0, alpha=0.3,
fill = "darkgreen", color = "darkgreen") +
geom_hline(aes(yintercept = min(Profit), colour = "Low"), alpha = 0.8, lwd = 1,
linetype="dotdash") +
geom_hline(aes(yintercept = Profit[14186], colour = "Finish"), alpha = 0.8,
lwd = 1, linetype="dotdash") +
ggtitle("Profit Over Time by Betting 'Under' for 2nd Half Over/Under") +
scale_color_manual(values = c('Profit' = 'darkgreen', "Low" = "red",
"High" = "blue", "Finish" = "black")) +
labs(x = "Date", y = "Running Profit", color = "Legend:") +
theme_bw()
library(ggplot2)
library(reshape2)
library(plyr)
odds <- read.table("../Data/tidy.csv", header=TRUE, sep=',')
head(odds)
ggplot(odds, aes(x=HSpreadOpen)) +
geom_histogram(binwidth=1, fill='orange', color='black') +
labs(y="Count", x="Home Team Spread at Open", title="Histogram of Point Spreads (Open) for Home Team in NBA Games")
ggplot(odds, aes(x=HSpreadClose)) +
geom_histogram(binwidth=1, fill='lightblue', color='black') +
labs(y="Count", x="Home Team Spread at Close", title="Histogram of Point Spreads (Close) for Home Team in NBA Games")
odds$VSpreadChange <- odds$VSpreadClose - odds$VSpreadOpen
odds$HSpreadChange <- odds$HSpreadClose - odds$HSpreadOpen
odds_melt <- melt(odds, id.vars="Index", measure.vars=c("HSpreadChange", "VSpreadChange"))
odds_melt$variable <- revalue(odds_melt$variable, c("HSpreadChange"="Home", "VSpreadChange"="Visiting"))
ggplot(odds_melt, aes(x=variable, y=value)) +
geom_boxplot() +
labs(x="Team", y="Spread", title="Change in Point Spread from Open to Close")
ggplot(odds_melt, aes(x=variable, y=value)) +
geom_boxplot() +
labs(x="Team", y="Spread", title="Change in Point Spread from Open to Close") +
coord_cartesian(ylim=c(quantile(odds_melt$value, 0.01), quantile(odds_melt$value, 0.99)))
ggplot(odds, aes(sample=HSpreadChange)) +
geom_qq() +
stat_qq_line(distribution=qnorm) +
labs(title='QQ Plot for Point Spread Changes', x='Theoretical', y='Spread Changes')
head(odds)
odds <- odds[c("VF", "HF", "HSpreadClose", "VSpreadClose", "HSpreadChange", "VSpreadChange")]
odds
spreadChange <- data.frame("Change" = c(-2.5, -2, -1.5, -1, -0.5, 0.5, 1, 1.5, 2, 2.5), "Profit")
for (j in 1:length(spreadChange$Change)){
odds$Payout <- 0
if (spreadChange$Change[j] < 0){
for (i in 1:length(odds$Payout)){
if (odds$HSpreadChange[i] <= spreadChange$Change[j]) {
if (odds$HSpreadClose[i] == 0){
if (odds$HF[i] > odds$VF[i]) {
odds$Payout[i] <- 95
} else {
odds$Payout[i] <- -100
}
} else {
if (odds$VF[i] - odds$HF[i] < odds$HSpreadClose[i]) {
odds$Payout[i] <- 95
} else if (odds$VF[i] - odds$HF[i] > odds$HSpreadClose[i]) {
odds$Payout[i] <- -100
}
}
}
if (odds$VSpreadChange[i] <= spreadChange$Change[j]) {
if (odds$VSpreadClose[i] == 0) {
if (odds$VF[i] > odds$HF[i]) {
odds$Payout[i] <- 95
} else {
odds$Payout[i] <- -100
}
} else {
if (odds$HF[i] - odds$VF[i] < odds$VSpreadClose[i]){
odds$Payout[i] <- 95
} else if (odds$HF[i] - odds$VF[i] > odds$VSpreadClose[i]) {
odds$Payout[i] <- -100
}
}
}
}
spreadChange$Profit[j] <- sum(odds$Payout)
} else if (spreadChange$Change[j] > 0){
for (i in 1:length(odds$Payout)){
if (odds$HSpreadChange[i] >= spreadChange$Change[j]) {
if (odds$HSpreadClose[i] == 0){
if (odds$HF[i] > odds$VF[i]) {
odds$Payout[i] <- 95
} else {
odds$Payout[i] <- -100
}
} else {
if (odds$VF[i] - odds$HF[i] < odds$HSpreadClose[i]) {
odds$Payout[i] <- 95
} else if (odds$VF[i] - odds$HF[i] > odds$HSpreadClose[i]) {
odds$Payout[i] <- -100
}
}
}
if (odds$VSpreadChange[i] >= spreadChange$Change[j]) {
if (odds$VSpreadClose[i] == 0) {
if (odds$VF[i] > odds$HF[i]) {
odds$Payout[i] <- 95
} else {
odds$Payout[i] <- -100
}
} else {
if (odds$HF[i] - odds$VF[i] < odds$VSpreadClose[i]){
odds$Payout[i] <- 95
} else if (odds$HF[i] - odds$VF[i] > odds$VSpreadClose[i]) {
odds$Payout[i] <- -100
}
}
}
}
spreadChange$Profit[j] <- sum(odds$Payout)
}
}
spreadChange$Change <- as.factor(spreadChange$Change)
ggplot(spreadChange, aes(x=Change, y=Profit)) +
geom_bar(stat='identity', fill='orange', color='black') +
geom_text(aes(label = paste(Profit), vjust = ifelse(Profit >= 0, -0.5, 1.5)), size=3) +
scale_y_continuous(limits = c(-40000,5000)) +
labs(x="Spread Change", title="Placing a $100 Bet On Sides With Different Spreads at the Open and Close")
# Simulates betting
df$Profit = 0
for (i in 2:length(df$Profit)){
if (df$VMoney[i] > 35 && df$VMoney[i] < 45) {
if (df$VResult[i] == TRUE) {
df$Profit[i] <- df$Profit[i - 1] + (((100 - df$VMoney[i])/(df$VMoney[i]))*100)
}
else {
df$Profit[i] <- df$Profit[i - 1] - 100
}
}
else{
df$Profit[i] <- df$Profit[i - 1]
}
}
View(OUs)
View(odds)
View(odds_melt)
View(spreadChange)
range(odds$HSpreadChange)
range(odds$VSpreadChange)
summary(odds$HSpreadChange)
summary(odds$VSpreadChange)
spreadChange <- data.frame("Change" = c(-2.5, -2, -1.5, -1, -0.5, 0.5, 1, 1.5, 2, 2.5), "Profit")
for (j in 1:length(spreadChange$Change)){
for (i in 1:length(odds$Payout)) {
odds$Payout <- 0
if (spreadChange$Change[j] == odds$HSpreadChange[i]) {  # if spread change for the game is a hit
if (odds$VF[i] - odds$HF[i] < odds$HSpreadClose) {    # if home team beat spread
odds$Payout[i] <- 95
} else {
odds$Payout[i] <- -100
}
} else if (spreadChange$Change[j] == odds$VSpreadChange[i]) {
if (odds$HF[i] - odds$VF[i] < odds$VSpreadClose) {    # if vis team beat spread
odds$Payout[i] <- 95
} else {
odds$Payout[i] <- -100
}
}
}
}
